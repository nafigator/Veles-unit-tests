<?php
/**
 * Юнит-тест для класса Application
 * @file    Application.php
 *
 * PHP version 5.4+
 *
 * @author  Alexander Yancharuk <alex at itvault dot info>
 * @date    Втр Янв 22 22:53:39 2013
 * @license The BSD 3-Clause License
 *          <https://tldrlegal.com/license/bsd-3-clause-license-(revised)>.
 */

namespace Veles\Tests\Application;

use PHPUnit_Framework_TestCase;
use Veles\Application\Application;
use Veles\Routing\IniConfigLoader;
use Veles\Routing\Route;
use Veles\Routing\RoutesConfig;
use Veles\View\View;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-22 at 22:53:39.
 * @group Application
 */
class ApplicationTest extends PHPUnit_Framework_TestCase
{
	/**
	 * Unit-test for Application::run
	 * @covers       Veles\Application\Application::run
	 * @dataProvider runProvider
	 *
	 * @param $url
	 * @param $expected
	 */
	public function testRun($url, $expected)
	{
		$_SERVER['REQUEST_URI'] = $url;
		$this->expectOutputString($expected['output']);

		$route = new Route;
		$config = new RoutesConfig(
			new IniConfigLoader(TEST_DIR . '/Project/routes.ini')
		);
		$route->setConfigHandler($config)->init();

		$app = new Application;
		$app->setRoute($route)->run();

		$result = $app->getRoute()->getParams();

		$msg = "Wrong Route::params in $url";
		$this->assertSame($expected['params'], $result, $msg);
	}

	/**
	 * DataProvider for Application::run
	 */
	public function runProvider()
	{
		$uri      = '/page-2.html';
		$expected = [
			'params'    => ['page' => '2'],
			'output' => <<<EOF
<!DOCTYPE html>
<html>
<head>
	<title>Veles is a fast PHP framework</title>
</head>
<body>
	<div id="main_wrapper">
		Test complete!
	</div>
	<div id="footer_wrapper">
		Hello World!
	</div>
</body>
</html>

EOF
		];

		return [[$uri, $expected]];
	}

	/**
	 * @covers Veles\Application\Application::setRoute
	 */
	public function testSetRoute()
	{
		$expected = new Route;
		$config = new RoutesConfig(
			new IniConfigLoader(TEST_DIR . '/Project/routessdfsdfsdf.ini')
		);
		$expected->setConfigHandler($config);

		$object = new Application;
		$object->setRoute($expected);

		$msg = 'Application::setRoute() wrong behavior!';
		$this->assertAttributeSame($expected, 'route', $object, $msg);
	}

	public function testGetRoute()
	{
		$expected = new Route;
		$config = new RoutesConfig(
			new IniConfigLoader(TEST_DIR . '/Project/routessdfsdfsdf.ini')
		);
		$expected->setConfigHandler($config);

		$object = new Application;
		$object->setRoute($expected);

		$result = $object->getRoute();

		$msg = 'Application::getRoute() returns wrong result!';
		$this->assertSame($expected, $result, $msg);
	}
}
