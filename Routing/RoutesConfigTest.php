<?php
namespace Veles\Tests\Routing;

use PHPUnit\Framework\TestCase;
use Veles\Routing\IniConfigLoader;
use Veles\Routing\RoutesConfig;
use Veles\Routing\RouteStatic;
use Veles\View\Adapters\NativeAdapter;
use Veles\Routing\RouteRegex;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-05-24 at 16:56:38.
 * @group route
 */
class RoutesConfigTest extends TestCase
{
	/**
	 * @var RoutesConfig
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp(): void
	{
		$routes_loader = new IniConfigLoader(TEST_DIR . '/Project/routes.ini');
		$this->object = new RoutesConfig($routes_loader);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown(): void
	{
	}

	/**
	 * @covers \Veles\Routing\RoutesConfig::getData
	 */
	public function testGetData()
	{
		$expected = [
			''         => [
				'Home'  => [
					'class'      => RouteStatic::class,
					'view'       => NativeAdapter::class,
					'route'      => '/',
					'tpl'        => 'Frontend/index.phtml',
					'controller' => 'Frontend\Home',
					'action'     => 'index',
				],
				'Home1' => [
					'class'      => RouteStatic::class,
					'view'       => NativeAdapter::class,
					'route'      => '/index.html',
					'tpl'        => 'Frontend/index.phtml',
					'controller' => 'Frontend\Home',
					'action'     => 'index',
				],
			],
			'page'     => [
				'Home2' => [
					'class'      => RouteRegex::class,
					'view'       => NativeAdapter::class,
					'route'      => '#^\\/page\\/(?<page>\\d+)$#',
					'tpl'        => 'Frontend/index.phtml',
					'controller' => 'Frontend\Home',
					'action'     => 'index',
				],
			],
			'book'     => [
				'TestMap' => [
					'class'      => RouteRegex::class,
					'view'       => NativeAdapter::class,
					'route'      => '#^\\/book\\/(?<book_id>\\d+)\\/user\\/(?<user_id>\\d+)$#',
					'tpl'        => 'Frontend/index.phtml',
					'controller' => 'Frontend\Home',
					'action'     => 'book',
				],
			],
			'contacts' => [
				'Contacts' => [
					'class'      => RouteStatic::class,
					'route'      => '/contacts',
					'controller' => 'Frontend\Contacts',
					'action'     => 'getAddress',
					'ajax'       => '1',
				],
			],
			'user'     => [
				'User' => [
					'class' => RouteStatic::class,
					'route' => '/user',
				],
			],
			'fake-route' => [
				'Key'  => 'value'
			]
		];
		$actual = $this->object->getData();
		$msg = 'RoutesConfig::getData() returns wrong value!';
		self::assertSame($expected, $actual, $msg);

		$actual = $this->object->getData();
		self::assertSame($expected, $actual, $msg);
	}
}
