<?php
namespace Veles\Tests\CurlRequest;

use PHPUnit\Framework\TestCase;
use Veles\CurlRequest\AuthStrategies\HttpBasic;
use Veles\CurlRequest\CurlRequest;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-06-23 at 14:12:01.
 *
 * @group curl-request
 */
class HttpBasicTest extends TestCase
{
	/**
	 * @var HttpBasic
	 */
	protected $object;

	protected function setUp(): void
	{
		$this->object = new HttpBasic;
	}

	public function testGetPassword(): void
	{
		$expected = uniqid();
		$this->object->setPassword($expected);

		$actual = $this->object->getPassword();
		$msg = 'HttpBasic::getPassword() returns wrong result!';
		self::assertSame($expected, $actual, $msg);
	}

	public function testGetLogin(): void
	{
		$expected = uniqid();
		$this->object->setLogin($expected);

		$actual = $this->object->getLogin();
		$msg = 'HttpBasic::getLogin() returns wrong result!';
		self::assertSame($expected, $actual, $msg);
	}

	/**
	 *
	 * @depends testGetPassword
	 * @depends testGetLogin
	 */
	public function testApply(): void
	{
		$url      = 'http://my-host.local';
		$login    = uniqid();
		$password = uniqid();

		$this->object->setPassword($password)->setLogin($login);

		$hash = base64_encode(
			$this->object->getLogin() . ':' . $this->object->getPassword()
		);
		$expected = ["Authorization: Basic $hash"];

		$request = new CurlRequest($url);
		$result = $this->object->apply($request);

		$actual = $request->getHeaders();
		$msg = 'HttpBasic::apply() wrong behavior!';
		self::assertSame($expected, $actual, $msg);

		$msg = 'HttpBasic::apply() returns wrong result!';
		self::assertSame($this->object, $result, $msg);
	}
}
