<?php
namespace Veles\Tests\DataBase;

use Veles\DataBase\DbFilter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-26 at 23:36:27.
 */
class DbFilterTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var DbFilter
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new DbFilter;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 * @covers Veles\DataBase\DbFilter::getWhere
	 */
	public function testGetWhere()
	{
		$where = 'where string';
		$this->object->setWhere($where);
		$expected = "WHERE $where";
		$result = $this->object->getWhere();
		$msg = 'DbFilter::getWhere() returns wrong result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::getGroup
	 */
	public function testGetGroup()
	{
		$group = 'group string';
		$this->object->setGroup($group);
		$expected = "GROUP BY $group";
		$result = $this->object->getGroup();
		$msg = 'DbFilter::getGroup() returns wrong result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::getHaving
	 */
	public function testGetHaving()
	{
		$having = 'having string';
		$this->object->setHaving($having);
		$expected = "HAVING $having";
		$result = $this->object->getHaving();
		$msg = 'DbFilter::getHaving() returns wrong result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::getOrder
	 */
	public function testGetOrder()
	{
		$order = 'order string';
		$this->object->setOrder($order);
		$expected = "ORDER BY $order";
		$result = $this->object->getOrder();
		$msg = 'DbFilter::getOrder() returns wrong result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::setWhere
	 */
	public function testSetWhere()
	{
		$where = 'where string';
		$this->object->setWhere($where);
		$expected = "WHERE $where";
		$msg = 'Wrong DbFilter::getWhere() behavior!';
		$this->assertAttributeSame($expected, 'where', $this->object, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::setGroup
	 */
	public function testSetGroup()
	{
		$group = 'group string';
		$this->object->setGroup($group);
		$expected = "GROUP BY $group";
		$msg = 'Wrong DbFilter::getGroup() behavior!';
		$this->assertAttributeSame($expected, 'group', $this->object, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::setHaving
	 */
	public function testSetHaving()
	{
		$having = 'having string';
		$this->object->setHaving($having);
		$expected = "HAVING $having";
		$msg = 'Wrong DbFilter::getHaving() behavior!';
		$this->assertAttributeSame($expected, 'having', $this->object, $msg);
	}

	/**
	 * @covers Veles\DataBase\DbFilter::setOrder
	 */
	public function testSetOrder()
	{
		$order = 'order string';
		$this->object->setOrder($order);
		$expected = "ORDER BY $order";
		$msg = 'Wrong DbFilter::getOrder() behavior!';
		$this->assertAttributeSame($expected, 'order', $this->object, $msg);
	}
}
