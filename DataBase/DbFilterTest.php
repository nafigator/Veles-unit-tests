<?php
namespace Veles\Tests\DataBase;

use PHPUnit\Framework\TestCase;
use Veles\DataBase\DbFilter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-26 at 23:36:27.
 */
class DbFilterTest extends TestCase
{
	/**
	 * @var DbFilter
	 */
	protected $object;

	protected function setUp(): void
	{
		$this->object = new DbFilter;
	}

	protected function tearDown(): void
	{
	}

	public function testGetWhere(): void
	{
		$where = 'where string';
		$this->object->setWhere($where);
		$expected = "WHERE $where";
		$result = $this->object->getWhere();
		$msg = 'DbFilter::getWhere() returns wrong result!';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetGroup(): void
	{
		$group = 'group string';
		$this->object->setGroup($group);
		$expected = "GROUP BY $group";
		$result = $this->object->getGroup();
		$msg = 'DbFilter::getGroup() returns wrong result!';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetHaving(): void
	{
		$having = 'having string';
		$this->object->setHaving($having);
		$expected = "HAVING $having";
		$result = $this->object->getHaving();
		$msg = 'DbFilter::getHaving() returns wrong result!';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetOrder(): void
	{
		$order = 'order string';
		$this->object->setOrder($order);
		$expected = "ORDER BY $order";
		$result = $this->object->getOrder();
		$msg = 'DbFilter::getOrder() returns wrong result!';
		self::assertSame($expected, $result, $msg);
	}
}
