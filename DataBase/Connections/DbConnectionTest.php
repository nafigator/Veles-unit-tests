<?php
namespace Veles\Tests\DataBase\Connections;

use PDO;
use PHPUnit\Framework\TestCase;
use Veles\DataBase\Connections\PdoConnection;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-27 at 12:46:38.
 * @group database
 */
class DbConnectionTest extends TestCase
{
	/**
	 * @var PdoConnection
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp(): void
	{
		$this->object = new PdoConnection('conn-name');
	}

	public function testConstructor(): void
	{
		$expected = 'conn-name';
		$result = $this->object->getName();

		$msg = 'Wrong connection name';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetResource(): void
	{
		$this->object->setDriver('\Veles\Tests\DataBase\Connections\PDOStub');
		$dsn = 'mysql:host=host;dbname=db_name;charset=utf8';
		$this->object->setDsn($dsn)
			->setUserName('user_name')
			->setPassword('password');

		$actual = $this->object->getResource();

		$msg = 'DbConnection::getResource() returns wrong result!';
		self::assertInstanceOf(PDO::class, $actual, $msg);

		$expected = 'some value';
		$this->object->setResource($expected);
		$result = $this->object->getResource();

		$msg = 'DbConnection::getResource() return wrong result!';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetName(): void
	{
		$expected = 'conn-name';
		$result = $this->object->getName();

		$msg = 'Wrong Connection::getName return result!';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetPassword(): void
	{
		$expected = 'Mega-password';
		$this->object->setPassword($expected);

		$result = $this->object->getPassword();

		$msg = 'Wrong Connection::getPassword return result!';
		self::assertSame($expected, $result, $msg);
	}

	public function testGetUserName(): void
	{
		$expected = 'megaUser';
		$this->object->setUserName($expected);

		$result = $this->object->getUserName();

		$msg = 'Wrong Connection::getUserName return result!';
		self::assertSame($expected, $result, $msg);
	}
}
