<?php
namespace Veles\Tests\DataBase\Connections;

use Veles\DataBase\Connections\PdoConnection;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-27 at 12:46:38.
 * @group database
 */
class DbConnectionTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var PdoConnection
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new PdoConnection('conn-name');
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::__construct
	 */
	public function testConstructor()
	{
		$expected = 'conn-name';
		$result = $this->object->getName();

		$msg = 'Wrong connection name';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::setResource
	 */
	public function testSetResource()
	{
		$expected = 'some value';
		$this->object->setResource($expected);

		$msg = 'Wrong Connection::$resource property value!';
		$this->assertAttributeEquals($expected, 'resource', $this->object, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::getResource
	 */
	public function testGetResource()
	{
		$expected = null;
		$result = $this->object->getResource();

		$msg = 'Wrong Connection::getResource default value!';
		$this->assertSame($expected, $result, $msg);

		$expected = 'some value';
		$this->object->setResource($expected);
		$result = $this->object->getResource();

		$msg = 'Wrong Connection::getResource return result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::getName
	 */
	public function testGetName()
	{
		$expected = 'conn-name';
		$result = $this->object->getName();

		$msg = 'Wrong Connection::getName return result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::setPassword
	 */
	public function testSetPassword()
	{
		$expected = 'Password-lkj';
		$result = $this->object->setPassword($expected);

		$msg = 'Wrong Connection::$password property value!';
		$this->assertAttributeEquals($expected, 'password', $this->object, $msg);

		$msg = 'Wrong Connection::setPassword return value!';
		$this->assertSame($this->object, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::getPassword
	 * @depends testSetPassword
	 */
	public function testGetPassword()
	{
		$expected = 'Mega-password';
		$this->object->setPassword($expected);

		$result = $this->object->getPassword();

		$msg = 'Wrong Connection::getPassword return result!';
		$this->assertSame($expected, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::setUserName
	 */
	public function testSetUserName()
	{
		$expected = 'user444';
		$result = $this->object->setUserName($expected);

		$msg = 'Wrong Connection::$user_name property value!';
		$this->assertAttributeEquals($expected, 'user_name', $this->object, $msg);

		$msg = 'Wrong Connection::setUserName return value!';
		$this->assertSame($this->object, $result, $msg);
	}

	/**
	 * @covers Veles\DataBase\Connections\DbConnection::getUserName
	 * @depends testSetUserName
	 */
	public function testGetUserName()
	{
		$expected = 'megaUser';
		$this->object->setUserName($expected);

		$result = $this->object->getUserName();

		$msg = 'Wrong Connection::getUserName return result!';
		$this->assertSame($expected, $result, $msg);
	}
}
