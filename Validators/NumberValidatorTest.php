<?php
/**
 * Byte values validator
 * @file    NumberValidatorTest.php
 *
 * PHP version 5.4+
 *
 * @author  Alexander Yancharuk <alex at itvault dot info>
 * @date    Вск Фев 17 10:48:43 2013
 * @license The BSD 3-Clause License
 *          <https://tldrlegal.com/license/bsd-3-clause-license-(revised)>.
 */

namespace Veles\Tests\Validators;

use PHPUnit_Framework_TestCase;
use Veles\Validators\NumberValidator;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-24 at 08:30:49.
 */
class NumberValidatorTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @covers Veles\Validators\NumberValidator::check
	 * @group  Validators
	 * @see	   NumberValidator::check()
	 * @dataProvider checkProvider
	 */
	public function testCheck($number, $expected)
	{
		$object = new NumberValidator;
		$result = $object->check($number);

		$msg = 'Wrong NumberValidator::check() validation';
		$this->assertSame($expected, $result, $msg);
	}

	public function checkProvider()
	{
		return [
			['lalala', false],
			[34, true],
			['34', true],
			[2147483649, false]
		];
	}

	/**
	 * @covers Veles\Validators\NumberValidator::__construct
	 * @group  Validators
	 * @see	   NumberValidator::__construct()
	 */
	public function testConstruct()
	{
		$expect_min = 10;
		$expect_max = 100;
		$object = new NumberValidator($expect_min, $expect_max);

		$msg = 'Wrong value of NumberValidator::min';
		$this->assertAttributeSame($expect_min, 'min', $object, $msg);

		$msg = 'Wrong value of NumberValidator::max';
		$this->assertAttributeSame($expect_max, 'max', $object, $msg);

		$expect_min = 1;
		$expect_max = 2147483647;
		$object = new NumberValidator;

		$msg = 'Wrong value of NumberValidator::min';
		$this->assertAttributeSame($expect_min, 'min', $object, $msg);

		$msg = 'Wrong value of NumberValidator::max';
		$this->assertAttributeSame($expect_max, 'max', $object, $msg);
	}
}
