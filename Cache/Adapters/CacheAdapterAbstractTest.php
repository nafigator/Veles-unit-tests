<?php
namespace Veles\Tests\Cache\Adapters;

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-09-03 at 16:52:22.
 * @group cache
 */
class CacheAdapterAbstractTest extends TestCase
{
	public static function tearDownAfterClass(): void
	{
		CacheAdapterAbstractChild::addCalls([]);
	}

	public function testGetDriver(): void
	{
		$expected = '123;kbn90bj';
		$obj = CacheAdapterAbstractChild::instance();
		$obj->setDriver($expected);

		$result = $obj->getDriver();
		$msg = 'Wrong result of CacheAdapterAbstract::getDriver()';
		self::assertSame($expected, $result, $msg);
	}

	public function testInstance(): void
	{
		$expected = CacheAdapterAbstractChild::class;
		CacheAdapterAbstractChild::setInstance(null);
		CacheAdapterAbstractChild::addCalls([]);
		$result = CacheAdapterAbstractChild::instance();

		$msg = 'Adapter returned wrong instance object!';
		self::assertInstanceOf($expected, $result, $msg);

		CacheAdapterAbstractChild::setInstance(null);
		CacheAdapterAbstractChild::addCalls([[
			'method'    => 'testCall',
			'arguments' => ['string']
		]]);

		$result = CacheAdapterAbstractChild::instance();

		$msg = 'Adapter returned wrong instance object!';
		self::assertInstanceOf($expected, $result, $msg);

		$result = CacheAdapterAbstractChild::getCalls();
		self::assertSame([], $result);
	}

	public function testAddCall(): void
	{
		CacheAdapterAbstractChild::addCall('testCall', ['string']);

		$result = CacheAdapterAbstractChild::getCalls();
		$expected = [[
			'method' => 'testCall',
			'arguments' => ['string']
		]];

		$msg = 'Driver calls was not saved correctly!';
		self::assertSame($expected, $result, $msg);
	}
}
